{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","todoId","setTodoId","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","filterBy","setFilterBy","query","setQuery","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","todoOpen","setTodoOpen","currentTodo","find","useEffect","userId","response","href","email","name","App","setTodos","visibleTodos","filter","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cdf7215d.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  todoId: number,\n  setTodoId: (agrument: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  todoId,\n  setTodoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const { id, title, completed } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classNames({\n                'has-background-info-light': todoId === id,\n              })}\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    setTodoId(id);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(\n                      'far',\n                      { 'fa-eye': todoId !== id },\n                      { 'fa-eye-slash': todoId === id },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { ChangeEvent } from 'react';\n\ntype Props = {\n  filterBy: string,\n  setFilterBy: (event: string) => void,\n  query: string,\n  setQuery: (event: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterBy,\n  setFilterBy,\n  query,\n  setQuery,\n}) => {\n  const handleFilterBy = (event: ChangeEvent<HTMLSelectElement>) => {\n    setFilterBy(event.target.value);\n  };\n\n  const handleQuery = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={handleFilterBy}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              value={query}\n              aria-label=\"clear search button\"\n              onClick={() => {\n                setQuery('');\n              }}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todos: Todo[],\n  todoId: number,\n  setTodoId: (parametr: number) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todos,\n  todoId,\n  setTodoId,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [todoOpen, setTodoOpen] = useState(true);\n\n  const currentTodo = todos.find(todo => todo.id === todoId);\n\n  useEffect(() => {\n    if (currentTodo) {\n      getUser(currentTodo.userId)\n        .then(response => {\n          setUser(response);\n        });\n    }\n  }, []);\n\n  if (todoOpen === false) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoId}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setTodoOpen(false);\n                setTodoId(0);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filterBy, setFilterBy] = useState<string>('All');\n  const [query, setQuery] = useState<string>('');\n  const [todoId, setTodoId] = useState<number>(0);\n\n  useEffect(() => {\n    getTodos()\n      .then(response => {\n        setTodos(response);\n      });\n  }, []);\n\n  const visibleTodos = todos.filter(todo => {\n    switch (filterBy) {\n      case 'active':\n        return !todo.completed;\n      case 'completed':\n        return todo.completed;\n      default:\n        return todo;\n    }\n  }).filter(todo => {\n    return todo.title.toLowerCase().includes(query.toLowerCase());\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterBy={filterBy}\n                setFilterBy={setFilterBy}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                todos.length < 1 ? (\n                  <Loader />\n                ) : (\n                  <TodoList\n                    todos={visibleTodos}\n                    todoId={todoId}\n                    setTodoId={setTodoId}\n                  />\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoId && (\n        <TodoModal\n          todos={visibleTodos}\n          todoId={todoId}\n          setTodoId={(todo) => setTodoId(todo)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}